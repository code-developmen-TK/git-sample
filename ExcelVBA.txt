Option Explicit
 
Sub 実行()
Dim this_year As Variant
Dim next_year As Variant
Dim first_day As Date
Dim last_day As Date
Dim current_date As Date
Dim day_of_week As Integer
Dim date_difference As Long
Dim is_target_years As Boolean
Dim i As Long
Dim row As Long
Dim column As Long
Dim first_date As String
Dim second_date As String
Const TUESDAY As Integer = 3
Const THURSDAY As Integer = 5

this_year = Application.InputBox("西暦を半角4桁の数字で入力してください。")
    
'キャンセル時の処理
If VarType(this_year) = vbBoolean Then 'Application.Inputboxはキャンセル時に論理型（False）を返す
    MsgBox "キャンセルされました"
    Exit Sub
End If
    
'4桁でない場合の処理
If Len(this_year) <> 4 Then
    MsgBox ("西暦は4桁で入力してください。" _
         & vbCrLf & "作業を中止します。")
    Exit Sub
End If
    
next_year = Str(Val(this_year) + 1)

first_day = DateValue(this_year & "/04/01")

is_target_years = first_day <= "2022/3/31" Or first_day >= "2050/03/31"

If is_target_years Then
    MsgBox "2022年から2050年までを入力して下さい。"
    Exit Sub
End If


last_day = DateValue(next_year & "/04/01")

current_date = first_day

'current_date = DateValue(#5/4/2023#)

date_difference = DateDiff("d", first_day, last_day)

row = 2
column = 2
first_date = ""
second_date = ""

For i = 1 To date_difference

    day_of_week = weekday(current_date)
    
    Select Case day_of_week
    
        Case TUESDAY
       
            If isHoliday(current_date) = True Then '火曜日が休みで
            
                If isHoliday(DateAdd("d", -1, current_date)) = True Then  '月曜日も休みなら1日目はなし
                
                     first_date = ""
                
                Else '月曜日が休みでないなら月曜日に実施
                
                    first_date = Format(DateAdd("d", -1, current_date), "m/d") & "(" & WeekdayName(weekday(DateAdd("d", -1, current_date)), True) & ")"
                                   
                End If
            
            Else '火曜日に実施
            
                first_date = Format(current_date, "m/d") & "(" & WeekdayName(weekday(current_date), True) & ")"
            
            End If
            
       
        Case THURSDAY
        
            If isHoliday(current_date) = True Then '木曜日が休みで
            
                If isHoliday(DateAdd("d", 1, current_date)) = True Then  '金曜日も休みなら2日目はなし
                
                    second_date = ""
                
                Else '金曜日が休みでないなら金曜日に実施
                               
                    second_date = Format(DateAdd("d", 1, current_date), "m/d") & "(" & WeekdayName(weekday(DateAdd("d", 1, current_date)), True) & ")"
                
                End If
            
            Else
            
               second_date = Format(current_date, "m/d") & "(" & WeekdayName(weekday(current_date), True) & ")"
            
            End If
            
            Worksheets("当番表").Cells(row, column) = first_date & " , " & second_date

            row = row + 1
            
            If row = 27 Then
            
                row = 2
                column = 3
            
            End If
            
        
        Case Else
        
        
    End Select
    
 
    current_date = DateAdd("d", 1, current_date)
   
   
Next

End Sub


Private Function isHoliday(ByVal current_date As Date) As Boolean
'---------------------------------------------------------------------------------------
'機能：取得した引数と、祝日一覧を比較して一致した場合にTrueを返す
'引数：祝日かどうか判定したい日付(日付型)
'返り値：真偽値
'エクセルVBAのFunctionプロシージャで祝日判定関数を自作する方法
'https://tonari-it.com/excel-vba-holiday-function/
'---------------------------------------------------------------------------------------
    Dim max_row As Long '祝日一覧の最終行
    Dim cnt_row As Long 'ループカウント用変数
    
    isHoliday = False '初期化
    
    With Worksheets("休日")
        max_row = .Cells(.Rows.Count, 1).End(xlUp).row '祝日一覧の最終行を取得する
        
        For cnt_row = 3 To max_row '祝日一覧を一行ずつ読み込むループ
            If .Range("A" & cnt_row).Value = current_date Then
                isHoliday = True '祝日一覧に引数strDateに一致する日付があればTrue
                Exit For  '一致する日付があればループを抜ける
            End If
        Next cnt_row
    End With
End Function

休日一覧表	
日付	祝日
2023/1/1	元旦
2023/1/9	成人の日
2023/2/11	建国記念の日
2023/2/23	天皇誕生日
2023/3/21	春分の日
2023/4/29	昭和の日
2023/5/3	憲法記念日
2023/5/4	みどりの日
2023/5/5	こどもの日
2023/7/17	海の日
2023/8/11	山の日
2023/9/18	敬老の日
2023/9/23	秋分の日
2023/10/9	スポーツの日
2023/11/3	文化の日
2023/11/23	勤労感謝の日

---------------------------------------------------------------------------------------------------
Sub 実行()
Dim shtWorkSheet As Worksheet
Dim rngRange As Range

Set shtWorkSheet = Worksheets("Sheet2")
Set rngRange = shtWorkSheet.Range("A2")


Call CSV出力(shtWorkSheet, rngRange)

End Sub

Sub CSV出力(ByVal sht As Worksheet, Optional ByVal rngStart As Range = Nothing)
'***********************************************************************
'エクセルの神髄-その後№1、CSV出力を追加
'https://excel-ubara.com/excelvba7/excelcustom37.html
'引数
'sht     :csv出力するデータの入ったシート名
'rngStart:csv出力する範囲の左端のセル
'***********************************************************************
    Dim varFile As Variant                   '保存ファイル名の指定
    Dim FSO As New FileSystemObject
    Dim TS As TextStream
    Dim lngRowMin As Long
    Dim lngRowMax As Long
    Dim lngColMin As Long
    Dim lngColMax As Long
    Dim i As Long

  
    varFile = Application.GetSaveAsFilename(InitialFileName:=sht.Name & ".csv", _
                                            FileFilter:="CSVファイル(*.csv),*.csv", _
                                            FilterIndex:=1, _
                                            Title:="保存ファイルの指定")
    If varFile = False Then
        Exit Sub
    End If
    
    '開始行列、終了行列を取得
    If rngStart Is Nothing Then  '開始範囲を引数で指定していない場合。
        lngRowMin = 1
        lngColMin = 1
    Else
        lngRowMin = rngStart.Row
        lngColMin = rngStart.Column
    End If
    
    lngRowMax = get_last_row(sht)
    lngColMax = get_last_column(sht)
  
    Set TS = FSO.CreateTextFile(Filename:=varFile, Overwrite:=True)
  
    For i = lngRowMin To lngRowMax
        TS.WriteLine CSV_EditRec(sht, i, lngColMin, lngColMax)
    Next
  
    TS.Close
    Set TS = Nothing
    Set FSO = Nothing

    MsgBox ("CSV出力しました。" & vbLf & vbLf & varFile)
End Sub

Private Function CSV_EditRec(ByVal sht As Worksheet, i As Long, lngColMin As Long, lngColMax As Long) As String
'***********************************************************************
'エクセルの神髄-その後№1、CSV出力を追加
'https://excel-ubara.com/excelvba7/excelcustom37.html
'***********************************************************************
    Dim strRec As String
    Dim strCol As String
    Dim j As Long

    strRec = ""
    For j = lngColMin To lngColMax
        Select Case True
            Case IsNumeric(sht.Cells(i, j))
                strCol = CStr(CDbl(sht.Cells(i, j)))
            Case IsDate(sht.Cells(i, j))
                If InStr(sht.Cells(i, j), "-") Then
                    strCol = sht.Cells(i, j)
                Else
                    strCol = Format(sht.Cells(i, j), "yyyy/mm/dd")
                End If
            Case InStr(sht.Cells(i, j), ","), InStr(sht.Cells(i, j), """")
                strCol = """" & sht.Cells(i, j) & """"
            Case Else
                strCol = sht.Cells(i, j)
        End Select
        If strRec = "" Then
            strRec = strCol
        Else
            strRec = strRec & "," & strCol
        End If
    Next
    CSV_EditRec = strRec
End Function
Function get_last_row(ByVal sht As Worksheet) As Long
'***************************************************
'概要：最終行を取得する関数
'エクセルの神髄-その後№1、CSV出力を追加
'https://excel-ubara.com/excelvba7/excelcustom37.html
'***************************************************
Dim ary As Variant
    Dim i As Long, j As Long
    ary = sht.Range(sht.Cells(1, 1), sht.Cells.SpecialCells(xlLastCell))
    Do
        For i = UBound(ary, 1) To LBound(ary, 1) Step -1
            j = 1
            For j = LBound(ary, 2) To UBound(ary, 2)
                If ary(i, j) <> "" Then
                    get_last_row = i
                    Exit Function
                End If
            Next j
        Next i
    Loop
End Function

Function get_last_column(ByVal sht As Worksheet) As Long
'***************************************************
'概要：最終列を取得する関数
'エクセルの神髄-その後№1、CSV出力を追加
'https://excel-ubara.com/excelvba7/excelcustom37.html
'***************************************************
Dim ary As Variant
    Dim i As Long, j As Long
    ary = sht.Range(sht.Cells(1, 1), sht.Cells.SpecialCells(xlLastCell))
    Do
        For i = UBound(ary, 2) To LBound(ary, 2) Step -1
            j = 1
            For j = LBound(ary, 1) To UBound(ary, 1)
                If ary(j, i) <> "" Then
                    get_last_column = i
                    Exit Function
                End If
            Next j
        Next i
    Loop
End Function

